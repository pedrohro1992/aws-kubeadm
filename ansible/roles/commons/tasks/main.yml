---
- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ node_name }}"

- name: Add IP to /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ hostvars[item]['ansible_host'] }} {{ hostvars[item]['inventory_hostname'] }}"
    state: present
    backup: true
    loop: "{{ groups['all'] }}"

- name: Disable swap on each node
  ansible.builtin.shell:
    cmd: swapoff -a

- name: Configure prerequesites
  ansible.builtin.shell:
    cmd: |
      cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
      overlay
      br_netfilter
      EOF

- name: Load overlay module
  community.general.modprobe:
    name: overlay
    state: present

- name: Load br_netfilter module
  community.general.modprobe:
    name: br_netfilter
    state: present

- name: sysctl params required by setup
  ansible.builtin.shell:
    cmd: |
      cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1
      EOF

- name: apply sysctl params without reboot
  ansible.builtin.shell:
    cmd: sysctl --system

- name: Install containerd prerequisites
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - apt-transport-https
    - ca-certificates
    - lsb-release
    - curl
    - gnupg

- name: Create keyrings directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"

- name: Add docker GPG key
  ansible.builtin.shell: |
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    sudo chmod a+r /etc/apt/keyrings/docker.gpg

- name: Add docker repository
  ansible.builtin.shell: |
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

- name: Update apt and install docker-ce
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop:
    - docker-ce=5:20.10.3~3-0~ubuntu-focal
    - docker-ce-cli=5:20.10.3~3-0~ubuntu-focal
    - containerd.io

- name: Enable containerd
  ansible.builtin.systemd:
    name: containerd
    daemon_reload: true
    state: started
    enabled: true

- name: Configure systemd cgroup driver for containerd
  ansible.builtin.template:
    src: config.toml.j2
    dest: /etc/containerd/config.toml
    mode: "0755"

- name: Restart containerd and daemon-reload to update config
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: true
    name: containerd

- name: Download Google Cloud's public key
  ansible.builtin.apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Add kubernetes repository
  ansible.builtin.apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes

- name: Update apt package index
  ansible.builtin.apt:
    update_cache: true

- name: Install kubeadm, kubelet, and kubectl
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - kubeadm
    - kubelet
    - kubectl

- name: Pin kubectl,kubeadm,kubelet versions
  ansible.builtin.shell: apt-mark hold kubelet kubectl kubeadm
